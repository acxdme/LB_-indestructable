// 2 DSA Question + JS questions + React Questions

//DSA

Q1)
Given an array A[] of n numbers and another number x, the task is to check whether or not there exist two
elements in A[] whose sum is exactly x.
A = [2,24,13,-9,4,13]
X = 15
Q2)
Given a string s of zeros and ones, return the maximum score after splitting the string into two non-empty
substrings (i.e. left substring and right substring).
The score after splitting a string is the number of zeros in the left substring plus the number of ones in the
right substring.
Example 1:
Input: s = "011101"
Output: 5
Explanation:
All possible ways of splitting s into two non-empty substrings are:
left = "0" and right = "11101", score = 1 + 4 = 5
left = "01" and right = "1101", score = 1 + 3 = 4
left = "011" and right = "101", score = 1 + 2 = 3
left = "0111" and right = "01", score = 1 + 1 = 2
left = "01110" and right = "1", score = 2 + 1 = 3

// Js
- var,let ,const : difference , scope , output based questions
- == vs === , with example
- websockets , webworkers
- widget implementation ( dnd kit , react-grid-layout , challenges with widgets and how did you overcome them)
- polyfills
- is js single threaded ? then how async task are executed , explained event loop
- Promise.all() vs Promise.allSettled()

// React 
useMemo() hook
HOC ( real use case in code)
Custom Hooks for seperating logic
