//Coding Question
/**
 * 
 * You have to find out maximum subarray sum
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
 ***/
 
 // nums[-1] ,-1
 
 
 
 function maxSubarray(arr: number[]) : number{
   
   
   let n: number = arr.length;
   let maxCurrent : number = arr[0];
   let maxGlobal: number = arr[0];
   for(let i =1 ; i < n ;i++){
       maxCurrent = Math.max(maxCurrent+arr[i],arr[i]);
       maxGlobal = Math.max(maxGlobal,maxCurrent);
      
   }
   
   return maxGlobal;
   
   
 }
 
 let nums : number[] = [-2,1,-3,4,-1,2,1,-5,4];

 
 let res = maxSubarray(nums);
 console.log("result is",res);

Q) Question on webpack, docker, kubernetes, MicroFrontend architecture, Babel.
Q) Web Securities and vulnerabilities.
Q) Which is better CSR and SSR.[Real-time examples]
Q) Where should be put the authentication token , (cookies, session ,localStorage);
Q) this is javascript!
Q) Prototype and Prototypal inheritance
